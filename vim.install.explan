" Modeline and Notes {
" THIS FILE IS THE INSTRUCTION OF INSTALLING VIM BUNDLES
" Divided into 2 parts: 1.Install process  2.explain use method
" Author    : CHRIS
" Date      : 20170428
" }

1. Install Process
    powerline/fonts :
        " fonst used for powerline/airline.
        cd ~/.vim/bundle/fonts/
        ./install

    Valloric/YouCompleteMe :
            " Vim 7.4.143  Python 2/3support.
            cd ~/.vim/vim_setting/script
            sh YouCompleteMe.sh
            Because this plugin in need install
                modidy the configuration file [ already copy to vim_setting]
                Maybe need add some headfiles to the configuration file if you want.

    neocomplete : require vim-lua

    " Deps On Command{
        ag.vim
            sudo apt-get install silversearcher-ag

        tagbar.vim
            sudo apt-get install ctags

        cscope:
            sudo apt-get install cscope
    " }


2. Explain use bundles
    " General {
        Xuyuanp/nerdtree-git-plugin:
            let g:NERDTreeIndicatorMapCustom = {
                \ "Modified"  : "✹",
                \ "Staged"    : "✚",
                \ "Untracked" : "✭",
                \ "Renamed"   : "➜",
                \ "Unmerged"  : "═",
                \ "Deleted"   : "✖",
                \ "Dirty"     : "✗",
                \ "Clean"     : "✔︎",
                \ 'Ignored'   : '☒',
                \ "Unknown"   : "?"
                \ }
            Use this variable to change symbols.

        vim-airline/vim-airline:
            let g:airline_left_sep = '»'
            let g:airline_right_sep = '«'
            More symbols is in airline.txt,  and can change symbols as you want.

            Note: If you define any section variables it will replace the default values
            entirely.  If you want to disable only certain parts of a section you can try
            using variables defined in the |airline-configuration| or |airline-extensions|
            section.
            >
              variable names                default contents
              ----------------------------------------------------------------------------
              let g:airline_section_a       (mode, crypt, paste, spell, iminsert)
              let g:airline_section_b       (hunks, branch)
              let g:airline_section_c       (bufferline or filename)
              let g:airline_section_gutter  (readonly, csv)
              let g:airline_section_x       (tagbar, filetype, virtualenv)
              let g:airline_section_y       (fileencoding, fileformat)
              let g:airline_section_z       (percentage, line number, column number)
              let g:airline_section_error   (ycm_error_count, syntastic, eclim)
              let g:airline_section_warning (ycm_warning_count, whitespace)

              " here is an example of how you could replace the branch indicator with
              " the current working directory, followed by the filename.
              let g:airline_section_b = '%{getcwd()}'
              let g:airline_section_c = '%t'
            <

        nathanaelkane/vim-indent-guides:
            Indent Guides is a plugin for visually displaying indent levels in Vim.        
    "}


    " General Programming {
	    tpope/vim-surround : 
            Surround.vim is all about "surroundings": parentheses, brackets, quotes,
            XML tags, and more.  The plugin provides mappings to easily delete,
            change and add such surroundings in pairs.

        godlygeek/tabular:
            it's useful to line up text.

    " }


    " Snippets & AutoComplete {
        Valloric/YouCompleteMe:
            a code-completion engine for Vim
    " }


    " PHP {
        spf13/PIV:
            " PHP相关的特性 0/开打折叠 1/关闭折叠
                let g:DisableAutoPHPFolding = 0
                let g:PIVAutoClose = 0
            ### PHP Doc Gen
            Generate phpDocumentor conforming documentation blocks for your PHP code. 
            To use place cursor on line with class, function or variable definition and type ,pd (in n mode)
    " }

    " HTML {
        tpope/vim-haml:
            contains the runtime files for Haml, Sass, and SCSS that ship with Vim
            Haml:是一种用来描述任何XHTML web document的标记语言，它是干净，简单的。而且也不用内嵌代码。

        mattn/webapi-vim:
            Support some webapi plugins (TODO: when use it configure)
            *Basic HTTP/*OAuth/*Atompub/*SOAP (in progress)/*XMLRPC/*MetaWeblog API
    " }

    " javascript {                                                                                        
        elzr/vim-json:
            Json 相关的配置(插件，语法等等)
        groenewege/vim-less:
            Less 是一个 CSS 预处理器，让 CSS 具有动态性。
        pangloss/vim-javascript:
        briancollins/vim-jst:
            A vim plugin for highlighting and indenting JST/EJS syntax. Based on the eruby syntax from vim-ruby.
            Probably not 100% correct (especially indentation), but it works for most cases I've tried.
            This plugin may require the vim-javascript plugin
        kchmck/vim-coffee-script:
            CoffeeScript是一套JavaScript的转译语言     
    " }


